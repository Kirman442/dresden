import{fl as m,aB as p,a_ as n,aC as i,aD as o,f0 as l,aF as d}from"./index-Ag4O5CUz.js";import{E as c}from"./I3SMeshView3D-38Y_Cy9w.js";import{n as u}from"./LayerView3D-IyGAvWG7.js";import{u as h}from"./LayerView-LmaagB7Y.js";import"./I3SOverrides-_C8BrCSX.js";import"./I3SNode-XpJXSklv.js";import"./I3SUtil-bAEeEnp_.js";import"./I3SBinaryReader-WIS8l6t5.js";import"./ReactiveSet-AfI8E-SX.js";import"./meshFeatureSet-woJemvxG.js";import"./Mesh-morq5kpt.js";import"./External-8Vjq980v.js";import"./FeatureLayerView3D-L0XYqKZb.js";import"./FeatureLayerViewBase3D-iA6sB3d7.js";import"./FeatureLikeLayerView3D-sj_Df38w.js";import"./dehydratedFeatureComparison-byYkTxmp.js";import"./queryForSymbologySnapping-ZxXCZ6yP.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates-PUXPqzD0.js";import"./rendererConversion-eMnVBFmT.js";import"./optimizedFeatureQueryEngineAdapter-icJoeP_r.js";import"./PooledRBush-bss6BpJy.js";import"./popupUtils-5pOMZLzx.js";import"./QueryEngine-N8GYtzww.js";import"./WhereClause-pIRAqDla.js";import"./timeSupport-HMBF9HBD.js";import"./projectionSupport-y9S6TKgH.js";import"./json-v6EOeNTY.js";import"./QueryEngineCapabilities-PzVpW5yD.js";import"./utils-cQikGP3S.js";import"./generateRendererUtils-ls2X-ysx.js";import"./FeatureStore-kfmqo7P6.js";import"./BoundsStore-F_pdXKr1.js";import"./heatmapTextureUtils-FcQOheWo.js";import"./projectExtentUtils-JeUCYxT0.js";import"./query-liAbjY0u.js";import"./pbfQueryUtils-t2dHGnYS.js";import"./pbf-3jGGaSMd.js";import"./EventedSet-EJomKfKL.js";import"./FeatureLayerView-v-kaYV9V.js";import"./RefreshableLayerView-WQUtIr6V.js";import"./SceneModification-cGxdEVjN.js";import"./persistable-n3Ser1X3.js";import"./multiOriginJSONSupportUtils-R5XHSAtL.js";import"./resourceExtension-CNt5yW0l.js";import"./SceneLayerWorker-HmAxx9pr.js";const g=.2;let r=class extends c(u(h)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,e,a,s;return((s=(a=(e=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:e.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new n;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o()],r.prototype,"i3slayer",null),i([o(l)],r.prototype,"updatingProgress",void 0),i([o()],r.prototype,"updatingProgressValue",null),i([o()],r.prototype,"lodFactor",null),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const mt=r;export{mt as default};

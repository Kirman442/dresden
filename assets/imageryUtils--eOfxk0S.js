import{I as m,b as o}from"./utils-AFumLaJU.js";import{gh as n,ao as c,ap as p}from"./index-Fa581PZM.js";import"./originUtils-1w5HeAJR.js";import"./multiOriginJSONSupportUtils-R5XHSAtL.js";import"./jsonContext-to_Xacfr.js";import"./saveAPIKeyUtils-Qise6SM0.js";const i="Image Service",u="imagery-layer-save",g="imagery-layer-save-as",f="imagery-tile-layer-save",v="imagery-tile-layer-save-as";function s(a){var t;if(a.type==="imagery")return{isValid:!0};const{raster:e}=a,r=(e==null?void 0:e.datasetFormat)==="Function"?(t=e.primaryRasters)==null?void 0:t.rasters[0]:e;return{isValid:(r==null?void 0:r.datasetFormat)==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function l(a){const e=a.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function d(a,e){const{parsedUrl:r,title:t,fullExtent:y}=a;e.url=r.path,e.title||(e.title=t),e.extent=await n(y),a.type==="imagery-tile"&&c(e,p.TILED_IMAGERY)}async function b(a,e){const r=a.type==="imagery"?u:f;return m({layer:a,itemType:i,validateLayer:s,createItemData:l,errorNamePrefix:r},e)}async function D(a,e,r){const t=a.type==="imagery"?g:v;return o({layer:a,itemType:i,validateLayer:s,createItemData:l,errorNamePrefix:t,newItem:e,setItemProperties:d},r)}export{b as save,D as saveAs};

import{fl as m,aB as p,a_ as n,aC as i,aD as o,f0 as l,aF as d}from"./index-9slH3TG2.js";import{E as c}from"./I3SMeshView3D-nAv4ACfK.js";import{n as u}from"./LayerView3D-MzLMhKI3.js";import{u as h}from"./LayerView-eG1gVCIi.js";import"./I3SOverrides--ncrzwic.js";import"./I3SNode-np4qr3K_.js";import"./I3SUtil-njLODVkl.js";import"./I3SBinaryReader-yXkzHnhU.js";import"./ReactiveSet-nuYBiid8.js";import"./meshFeatureSet-xJ4moRHa.js";import"./Mesh-03JiSsmh.js";import"./External-bjFNV-YQ.js";import"./FeatureLayerView3D-8N5WNk9Q.js";import"./FeatureLayerViewBase3D-NRlUzUHL.js";import"./FeatureLikeLayerView3D--VYh7vW7.js";import"./dehydratedFeatureComparison-FUWG9F0L.js";import"./queryForSymbologySnapping-GYSPA4Bh.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates-lopN5nH1.js";import"./rendererConversion-C51i9kNv.js";import"./optimizedFeatureQueryEngineAdapter-e6JgIirS.js";import"./PooledRBush-90cs-j66.js";import"./popupUtils-E30qMFZv.js";import"./QueryEngine-tgKThaWy.js";import"./WhereClause-hqfi-Srq.js";import"./timeSupport-UP1a3-E6.js";import"./projectionSupport-lst4tmAa.js";import"./json-v6EOeNTY.js";import"./QueryEngineCapabilities-PzVpW5yD.js";import"./utils-eTr_J_8B.js";import"./generateRendererUtils-zM5Vw2QP.js";import"./FeatureStore-0GEnP-Bv.js";import"./BoundsStore-pk7WK1h_.js";import"./heatmapTextureUtils-sZbv0a7W.js";import"./projectExtentUtils-F1fSmvFB.js";import"./query-cdNAIYrZ.js";import"./pbfQueryUtils-xFRZw7Lh.js";import"./pbf-oi_eY2em.js";import"./EventedSet-Z8WLCjWl.js";import"./FeatureLayerView-TxzwYJ_K.js";import"./RefreshableLayerView-l0mynoYh.js";import"./SceneModification-OjHPMthO.js";import"./persistable-5x2T9ay1.js";import"./multiOriginJSONSupportUtils-R5XHSAtL.js";import"./resourceExtension-sxT4snJ1.js";import"./SceneLayerWorker-_t_8RN97.js";const g=.2;let r=class extends c(u(h)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,e,a,s;return((s=(a=(e=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:e.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new n;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o()],r.prototype,"i3slayer",null),i([o(l)],r.prototype,"updatingProgress",void 0),i([o()],r.prototype,"updatingProgressValue",null),i([o()],r.prototype,"lodFactor",null),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const mt=r;export{mt as default};

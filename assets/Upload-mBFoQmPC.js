import{aJ as g,fm as _,dp as u,di as v,cz as T,bx as k,aC as l,aD as r,aF as w,bs as F,ge as E,gf as P}from"./index-Fa581PZM.js";import{i as $,e as b,h as x}from"./progressUtils-3BzVmbja.js";let o=class extends g{constructor(){super({}),this.files=[],this.progress=0,this._uploadTask=null,this._layer=null}destroy(){this.cancel(),this.files=[],this._layer=null,this._uploadTask=null}get state(){const e=this._uploadTask;return e&&this.files.length!==0?e.finished?e.error?"error":"success":"pending":"default"}get result(){var e;return((e=this._uploadTask)==null?void 0:e.value)??null}get error(){var e;return((e=this._uploadTask)==null?void 0:e.error)??null}uploadTo(e){this.cancel(),this.files=[],this._layer=e,this._uploadTask=_(async s=>{const a=await z(e);u(s),this.progress=0,this.files=a;const t=$(b.upload,d=>{this.progress=d},"Upload.uploadTo");if(a.length===0)return null;const{default:i}=await v(()=>import("./Mesh-IbH0n2qx.js"),__vite__mapDeps([0,1,2,3]));u(s);const p=await i.extractAndFilterFiles(a,e);u(s),p.length>0&&(this.files=p);const h=new T({x:0,y:0,z:0,spatialReference:e.spatialReference}),c=await i.createFromFiles(h,p,{layer:e,signal:s,onProgress:t.makeOnProgress("createFromFiles")});if(u(s),!c)throw new k("editor:upload","could not upload or convert model");const f=p.reduce((d,m)=>d+m.size,0),y=t.simulate("loadMesh",x(f));try{await c.load()}finally{y.remove()}return c})}retry(){this._layer&&this.uploadTo(this._layer)}cancel(){var e;(e=this._uploadTask)==null||e.abort()}};l([r()],o.prototype,"files",void 0),l([r()],o.prototype,"progress",void 0),l([r()],o.prototype,"state",null),l([r()],o.prototype,"result",null),l([r()],o.prototype,"error",null),l([r()],o.prototype,"_uploadTask",void 0),l([r()],o.prototype,"_layer",void 0),o=l([w("esri.widgets.Editor.Upload")],o);let n=null;async function z(e){const{resolve:s,promise:a}=F(),t=document.createElement("input");t.type="file",t.multiple=!1,t.accept=[...E(e.infoFor3D),".zip"].join(","),t.style.display="none",document.body.appendChild(t);const i=P(t,"change",()=>s(t.files?Array.from(t.files):[]));return n?n(t):t.click(),a.finally(()=>{i.remove(),t.remove()})}function C(e){n=s=>{Promise.resolve().then(()=>e).then(a=>{if(!n)return;const t=new DataTransfer;a.forEach(i=>t.items.add(i)),s.files=t.files,s.dispatchEvent(new Event("change"))})}}function R(){n=null}export{o as Upload,R as clearPromptForFilesStub,C as stubFilePickerToSelect};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/Mesh-IbH0n2qx.js","assets/index-Fa581PZM.js","assets/index-2jScoq2u.css","assets/External-_eioB8Q-.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{aU as d,bx as c,dh as y,aP as h,aV as f,aC as p,aD as m,aF as S}from"./index-Ag4O5CUz.js";import v from"./FeatureLayerView2D-wURGJOTr.js";import{e as _}from"./util-m4-l98Hn.js";import{o as g}from"./StreamLayerView-gDzlZQPF.js";import"./EffectView-CpL-etqN.js";import"./definitions-r4s07KTk.js";import"./LayerView2D-t-lM3hiI.js";import"./Container-i0iG4pPG.js";import"./AttributeStoreView-EvCsjkg3.js";import"./enums-uBkgX7tf.js";import"./color-Mz_2dK3W.js";import"./number-sTjsTbdA.js";import"./WGLContainer-FkPO4eNj.js";import"./WGLBrushVTLSymbol-2K_O0P3b.js";import"./vec4f32-NvfHy9q7.js";import"./GeometryUtils-b9mbMeHJ.js";import"./ShaderCompiler-doWIo4Qy.js";import"./ProgramTemplate-pbHI2j_B.js";import"./MaterialKey-6vvrvzpD.js";import"./alignmentUtils-XT3TYmYW.js";import"./heatmapTextureUtils-FcQOheWo.js";import"./visualVariablesUtils-TpPKwbEa.js";import"./cimAnalyzer-Y6KRRNJw.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-BKkv7j8P.js";import"./GeometryUtils-CEMOhUyj.js";import"./Rect-pT1ASav_.js";import"./ExpandedCIM-TbbD2lL4.js";import"./BitmapTileContainer-ss_yXG_b.js";import"./Bitmap-1d0sF_GZ.js";import"./TileContainer-VCi3xp5C.js";import"./CircularArray-1_thnT0U.js";import"./BufferPool-UUnFUIhU.js";import"./FeatureContainer-eOZG_ihV.js";import"./FeatureLayerView-v-kaYV9V.js";import"./popupUtils-5pOMZLzx.js";import"./LayerView-LmaagB7Y.js";import"./RefreshableLayerView-WQUtIr6V.js";function u(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t.toJSON()),e!=null&&(r.where=e),r}let s=class extends g(v){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([d(()=>this.layer.customParameters,e=>this._proxy.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._proxy.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>this._proxy.sendMessageToClient(e)),d(()=>this.layer.purgeOptions,()=>this._update()),d(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new c("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return y(e.map(o=>this.on(o,t)));const r=["data-received","message-received"].includes(e);r&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const n=super.on(e,t),i=this;return h(()=>{n.remove(),r&&(i._proxy.closed||i.hasEventListener(e)||i._proxy.enableEvent(e,!1))})}queryLatestObservations(e,t){var r,n,i;if(!((r=this.layer.timeInfo)!=null&&r.endField||(n=this.layer.timeInfo)!=null&&n.startField||(i=this.layer.timeInfo)!=null&&i.trackIdField))throw new c("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(o=>{const a=f.fromJSON(o);return a.features.forEach(l=>{l.layer=this.layer,l.sourceLayer=this.layer}),a})}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){var e;(e=this._proxy)==null||e.pauseStream()}_doResume(){var e;(e=this._proxy)==null||e.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(u(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){var a;const e=this.layer,{objectIdField:t}=e,r=e.fields.map(l=>l.toJSON()),n=_(e.geometryType),i=((a=e.timeInfo)==null?void 0:a.toJSON())||null,o=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:r,fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:n,objectIdField:t,timeInfo:i,source:this.layer.parsedUrl,serviceFilter:u(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:o,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};p([m()],s.prototype,"pipelineConnectionStatus",void 0),p([m()],s.prototype,"pipelineErrorString",void 0),p([m({readOnly:!0})],s.prototype,"connectionError",null),p([m({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=p([S("esri.views.2d.layers.StreamLayerView2D")],s);const ne=s;export{ne as default};

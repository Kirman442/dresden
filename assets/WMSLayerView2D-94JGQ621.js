import{aR as R,aT as S,aU as U,aH as q,cC as $,aC as h,aD as f,aF as H}from"./index-Fa581PZM.js";import{a as w}from"./BitmapContainer-diNPT5XA.js";import{m as I}from"./LayerView2D-c-da-Vl1.js";import{v as E}from"./ExportStrategy-wTqGH3sY.js";import{u as F}from"./LayerView-k8lDhY4d.js";import{a as W}from"./RefreshableLayerView-qZl7sO71.js";import{i as A}from"./WMSLayerView-tBona8Xb.js";import"./WGLContainer-EnK1FNe-.js";import"./definitions-VcAE-RVJ.js";import"./WGLBrushVTLSymbol-Ym74GfbJ.js";import"./vec4f32-NvfHy9q7.js";import"./enums-uBkgX7tf.js";import"./number-sTjsTbdA.js";import"./GeometryUtils-b9mbMeHJ.js";import"./color-E69nykg7.js";import"./ShaderCompiler-doWIo4Qy.js";import"./ProgramTemplate-RZOre97J.js";import"./MaterialKey-wWSbWIeR.js";import"./alignmentUtils-XT3TYmYW.js";import"./heatmapTextureUtils-NapGCkqR.js";import"./Container-HgTvNi0l.js";import"./EffectView-ZhYuuz2A.js";import"./Bitmap-35FVgDCS.js";import"./ExportWMSImageParameters-i8Ri00_f.js";let s=class extends A(W(I(F))){constructor(){super(...arguments),this.bitmapContainer=new w}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(e=>{R(e)||S.getLogger(this).error(e)})}attach(){const{layer:t}=this,{imageMaxHeight:e,imageMaxWidth:r}=t;this.bitmapContainer=new w,this.container.addChild(this.bitmapContainer),this.strategy=new E({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(U(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=q(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:e,bitmapContainer:r}=this,{x:a,y:o}=t,{spatialReference:v}=e;let i,m=0,d=0;if(r.children.some(M=>{const{width:c,height:g,resolution:y,x:n,y:p}=M,l=n+y*c,x=p-y*g;return a>=n&&a<=l&&o<=p&&o>=x&&(i=new $({xmin:n,ymin:x,xmax:l,ymax:p,spatialReference:v}),m=c,d=g,!0)}),!i)return null;const u=i.width/m,C=Math.round((a-i.xmin)/u),b=Math.round((i.ymax-o)/u);return{extent:i,width:m,height:d,x:C,y:b}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,a){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,...a})}};h([f()],s.prototype,"strategy",void 0),h([f()],s.prototype,"updating",void 0),s=h([H("esri.views.2d.layers.WMSLayerView2D")],s);const st=s;export{st as default};

import{aC as m,aF as d,aU as u,aB as y,b6 as h,cK as c}from"./index-Fa581PZM.js";import b from"./FeatureLayerView2D-hna3tQ1L.js";import"./EffectView-ZhYuuz2A.js";import"./definitions-VcAE-RVJ.js";import"./LayerView2D-c-da-Vl1.js";import"./Container-HgTvNi0l.js";import"./AttributeStoreView-AXYJBEMN.js";import"./enums-uBkgX7tf.js";import"./color-E69nykg7.js";import"./number-sTjsTbdA.js";import"./WGLContainer-EnK1FNe-.js";import"./WGLBrushVTLSymbol-Ym74GfbJ.js";import"./vec4f32-NvfHy9q7.js";import"./GeometryUtils-b9mbMeHJ.js";import"./ShaderCompiler-doWIo4Qy.js";import"./ProgramTemplate-RZOre97J.js";import"./MaterialKey-wWSbWIeR.js";import"./alignmentUtils-XT3TYmYW.js";import"./heatmapTextureUtils-NapGCkqR.js";import"./visualVariablesUtils-MacGyMlA.js";import"./cimAnalyzer-5fj9LbrM.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-GbRVFWCr.js";import"./GeometryUtils-CEMOhUyj.js";import"./Rect-pT1ASav_.js";import"./ExpandedCIM-rb_8JK0h.js";import"./util-_-PsDz29.js";import"./BitmapTileContainer-LcOSRRdV.js";import"./Bitmap-35FVgDCS.js";import"./TileContainer-uWi-Rr9K.js";import"./CircularArray-1_thnT0U.js";import"./BufferPool-blWMO-LJ.js";import"./FeatureContainer-UDFRLpic.js";import"./FeatureLayerView-YsCps-dT.js";import"./popupUtils-LOZI3TlK.js";import"./LayerView-k8lDhY4d.js";import"./RefreshableLayerView-qZl7sO71.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let a=class extends b{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var l;const i=this.layer.sublayers.some(p=>p.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((l=this.tileRenderer)==null?void 0:l.updating),n=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${n}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),n}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new c().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};a=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],a);const ie=a;export{ie as default};

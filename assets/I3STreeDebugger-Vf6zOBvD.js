import{a$ as S,i1 as d,i2 as o,h8 as u,i3 as r,aE as b,aC as p,aD as c,aF as g,i4 as v,fL as j}from"./index-Fa581PZM.js";import{d as m}from"./TileTreeDebugger-A9UhhVnm.js";let h=class extends m{constructor(n){super(n)}getTiles(){const n=this.lv.getVisibleNodes(),l=this.view.renderSpatialReference,t=this.nodeSR;return n.map(i=>y(i,l,t)).filter(S).sort((i,s)=>i.lij[0]===s.lij[0]?i.label>s.label?-1:1:i.lij[0]-s.lij[0])}};function y(n,l,t){const i=n.serviceObb;if(i==null||l==null)return null;d(a,i.quaternion),o(e,i.center),u(e,t,0,e,l,0,1),a[12]=e[0],a[13]=e[1],a[14]=e[2];const s=[[],[],[]];o(e,i.halfSize),r(e,e,a),u(e,l,0,e,t,0,1),s[0].push([e[0],e[1]]),o(e,i.halfSize),e[0]=-e[0],r(e,e,a),u(e,l,0,e,t,0,1),s[0].push([e[0],e[1]]),o(e,i.halfSize),e[0]=-e[0],e[1]=-e[1],r(e,e,a),u(e,l,0,e,t,0,1),s[0].push([e[0],e[1]]),o(e,i.halfSize),e[1]=-e[1],r(e,e,a),u(e,l,0,e,t,0,1),s[0].push([e[0],e[1]]),s[1].push(s[0][0]),s[1].push(s[0][1]),o(e,i.halfSize),e[0]=-e[0],e[2]=-e[2],r(e,e,a),u(e,l,0,e,t,0,1),s[1].push([e[0],e[1]]),o(e,i.halfSize),e[2]=-e[2],r(e,e,a),u(e,l,0,e,t,0,1),s[1].push([e[0],e[1]]),s[2].push(s[0][0]),s[2].push(s[0][3]),o(e,i.halfSize),e[1]=-e[1],e[2]=-e[2],r(e,e,a),u(e,l,0,e,t,0,1),s[2].push([e[0],e[1]]),s[2].push(s[1][3]);const f=new b({rings:s,spatialReference:t});return{lij:[n.level,n.childCount,0],label:n.id,geometry:f}}p([c({constructOnly:!0})],h.prototype,"lv",void 0),p([c({constructOnly:!0})],h.prototype,"nodeSR",void 0),h=p([g("esri.views.3d.layers.support.I3STreeDebugger")],h);const a=v(),e=j();export{h as I3STreeDebugger};

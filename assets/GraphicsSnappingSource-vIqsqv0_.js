import{aJ as v,aA as S,aB as y,hG as w,aU as b,b3 as E,hK as k,dp as h,hL as F,hI as C,fm as A,bo as G,aE as P,hM as g,c$ as I,cZ as $,eE as H,eK as R,eX as O,eA as x,fN as z,aC as r,aD as p,aF as Z,hJ as M,hN as L}from"./index-Fa581PZM.js";import{t as W}from"./memoize-uBdPJ80n.js";import{a as J}from"./normalizeUtilsSync--fy2m0p9.js";import{m as N}from"./FeatureStore-3FbAgXTQ.js";import{W as j}from"./QueryEngine-v_R6Db-o.js";import{o as q,a as D}from"./queryEngineUtils--0oyuMFf.js";import{i as m,r as T,n as _}from"./symbologySnappingCandidates-Vm6-LTpU.js";import"./BoundsStore-9L_FIjMx.js";import"./PooledRBush-BZ-Q-uCT.js";import"./timeSupport-kz_Cu9A0.js";import"./projectionSupport-2K-krMGY.js";import"./json-v6EOeNTY.js";import"./optimizedFeatureQueryEngineAdapter-MtjjluUp.js";import"./WhereClause-W67ku_Py.js";import"./QueryEngineCapabilities-PzVpW5yD.js";import"./utils-sin7-0D1.js";import"./generateRendererUtils-IJIWDk1S.js";import"./VertexSnappingCandidate-Go0QBpx1.js";import"./PointSnappingHint-F86q_9XM.js";const f="graphics-collections";let o=class extends v{get updating(){return this._updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d";if(!s||t.type==="map-notes")return m();const i=async(n,a)=>(await M(e.whenLayerView(t),a)).elevationAlignPointsInFeatures(n,a);return m(s,{elevationInfo:t.elevationInfo,alignPointsInFeatures:i})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return T(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d",i=this._extrudedPolygonSymbolsCount>0;return s&&t.type!=="map-notes"&&i?_(i,async(n,a)=>{const l=await e.whenLayerView(t);return h(a),l.queryForSymbologySnapping({candidates:n,spatialReference:e.spatialReference},a)}):_()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new S,this._memoizedMakeGetGroundElevation=W(q)}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources(e=>this._destroySource(e)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),s=>{this._updatingHandles.removeHandles(f);for(const i of s)this._addMany(i.graphics.toArray()),this.addHandles([i.on("graphic-update",n=>this._onGraphicUpdate(n)),this._updatingHandles.addOnCollectionChange(()=>i.graphics,n=>this._onGraphicsChanged(n))],f)},y);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&this.addHandles([e.elevationProvider.on("elevation-change",({context:s})=>{w(s,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),b(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),y),E(()=>t,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(e,t){const{point:s,coordinateHelper:{spatialReference:i}}=e,n=await k(this._mapSources(d=>this._fetchCandidatesForSource(d,e,t)));h(t);const a=this._memoizedMakeGetGroundElevation(this.view,i),l=n.flat().map(d=>D(d,a));return F(s,l),l}async _fetchCandidatesForSource(e,t,s){var u;const i=C(t,((u=this.view)==null?void 0:u.type)??"2d"),n=await e.queryEngine.executeQueryForSnapping(i,s);h(s);const a=await this._snappingElevationAligner.alignCandidates(n.candidates,t.coordinateHelper.spatialReference,s);h(s);const l=await this._symbologySnappingFetcher.fetch(a,s);h(s);const d=l.length===0?a:[...a,...l];return this._snappingElevationFilter.filter(i,d)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some(t=>t.graphics.includes(e.graphic)))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],s=new Map;for(const i of e)i.geometry!=null&&(this._needsInitializeProjection(i.geometry.spatialReference)?(t.push(i.geometry.spatialReference),s.set(i.uid,i)):this._add(i));this._createPendingAdd(t,s)}_createPendingAdd(e,t){if(!e.length)return;const s=A(async a=>{await G(e.map(l=>({source:l,dest:this.spatialReference})),{signal:a}),this._markLoadedSpatialReferences(e);for(const[,l]of t)this._add(l)});this._updatingHandles.addPromise(s.promise);const i={task:s,graphics:t},n=()=>L(this._pendingAdds,i);s.promise.then(n,n),this._pendingAdds.push(i)}_markLoadedSpatialReferences(e){for(const t of e){t.wkid!=null&&this._loadedWkids.add(t.wkid);const s=t.wkt2||t.wkt;s&&this._loadedWkts.add(s)}}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=P.fromExtent(t));const s=this._ensureSource(t.type);if(s==null)return;const i=this._createOptimizedFeature(e.uid,t);i!=null&&(s.featureStore.add(i),g(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){if(e.wkid!=null&&this._loadedWkids.has(e.wkid))return!1;const t=e.wkt2||e.wkt;return(!t||!this._loadedWkts.has(t))&&!I(e,this.spatialReference)}_createOptimizedFeature(e,t){const s=$(J(t),this.spatialReference);if(!s)return null;const i=this._ensureGeometryHasZ(s),n=H(i,this._hasZ,!1);return new R(n,{[c]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=i=>{for(;i.length<3;)i.push(0)},s=e.clone();switch(s.hasZ=!0,s.type){case"point":s.z=s.z??0;break;case"multipoint":s.points.forEach(t);break;case"polyline":s.paths.forEach(i=>i.forEach(t));break;case"polygon":s.rings.forEach(i=>i.forEach(t))}return s}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const s=this._createSource(e);return this._sources[e]=s,s}_createSource(e){const t=O.toJSON(e),s=this._hasZ,i=new N({geometryType:t,hasZ:s,hasM:!1});return{featureStore:i,queryEngine:new j({featureStore:i,fieldsIndex:x.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:t,hasM:!1,hasZ:s,objectIdField:c,spatialReference:this.spatialReference,priority:z.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&(e.featureStore.removeById(t.uid),g(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:s,polyline:i,multipoint:n}=this._sources,a=[];return t!=null&&a.push(e(t)),s!=null&&a.push(e(s)),i!=null&&a.push(e(i)),n!=null&&a.push(e(n)),a}};r([p()],o.prototype,"getGraphicsLayers",void 0),r([p({constructOnly:!0})],o.prototype,"layerSource",void 0),r([p({constructOnly:!0})],o.prototype,"spatialReference",void 0),r([p({constructOnly:!0})],o.prototype,"view",void 0),r([p({readOnly:!0})],o.prototype,"updating",null),r([p({readOnly:!0})],o.prototype,"availability",void 0),r([p()],o.prototype,"_hasZ",null),r([p()],o.prototype,"_snappingElevationAligner",null),r([p()],o.prototype,"_snappingElevationFilter",null),r([p()],o.prototype,"_symbologySnappingFetcher",null),r([p()],o.prototype,"_extrudedPolygonSymbolsCount",void 0),o=r([Z("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],o);const c="OBJECTID";export{o as GraphicsSnappingSource};

import{h,g,k as i}from"./euclideanAreaMeasurementUtils-FqAH0I4r.js";import{nW as q,fK as $,fL as d,f_ as o,nX as m,d5 as b}from"./index-Fa581PZM.js";import{geodesicArea as k}from"./geometryEngine-ngVjx7CG.js";import{r as y}from"./Tooltip-eek7aSmw.js";function M({hasZ:r,spatialReference:n,rings:e},s,u=0){const a=q(n);if(a==null)return!1;const l=r?t=>t:t=>$(R,t[0],t[1],u);for(const t of e){const f=[];for(const p of t){const c=[0,0,u];a(l(p),0,c,0),f.push(c)}s.push(f)}return!0}const R=d();function G(r){const{spatialReference:n}=r;return y(n,W,w,x,r)}function W(r){return o(Math.abs(m([r],"square-meters")[0]),"square-meters")}function w(r){try{return o(Math.abs(k(r,"square-meters")),"square-meters")}catch{return null}}function x(r){const n=[];return M(r,n)?o(Math.abs(m([{type:"polygon",rings:n,spatialReference:b.WGS84}],"square-meters")[0]),"square-meters"):null}function A(r,n,e=i()){if(n==="on-the-ground"){const s=G(r);return s??h(r,e)}return g(r,e)}function Z(r,n=i()){return A(r,"on-the-ground",n)}export{A as o,Z as u};

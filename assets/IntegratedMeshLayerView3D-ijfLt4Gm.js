import{fl as m,aB as p,a_ as n,aC as i,aD as o,f0 as l,aF as d}from"./index-etWHd6DB.js";import{E as c}from"./I3SMeshView3D-q5qJI4Rs.js";import{n as u}from"./LayerView3D-uL3NDtjf.js";import{u as h}from"./LayerView-y8Ls0kgx.js";import"./I3SOverrides-hqUPat5L.js";import"./I3SNode-dVkCIZFM.js";import"./I3SUtil-C-3rzZhC.js";import"./I3SBinaryReader-FmVAmZvm.js";import"./ReactiveSet-O1TiC1q_.js";import"./meshFeatureSet-CAdAt3j1.js";import"./Mesh-IoCfkjsl.js";import"./External-pI94N27Z.js";import"./FeatureLayerView3D-PZvt_X8-.js";import"./FeatureLayerViewBase3D-XS4x4xah.js";import"./FeatureLikeLayerView3D-L_2KFyT7.js";import"./dehydratedFeatureComparison-tNFHThDH.js";import"./queryForSymbologySnapping-FqqYNamf.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates-uOcpwdIs.js";import"./rendererConversion-v9YZPoF0.js";import"./optimizedFeatureQueryEngineAdapter-FhBLd_Rx.js";import"./PooledRBush-2_wiMpf6.js";import"./popupUtils-8mmRXdyh.js";import"./QueryEngine-ZL3bOect.js";import"./WhereClause-HdlWBIKs.js";import"./timeSupport-SHPKGPHl.js";import"./projectionSupport-9Dqdggdl.js";import"./json-v6EOeNTY.js";import"./QueryEngineCapabilities-PzVpW5yD.js";import"./utils-6dR7GY1R.js";import"./generateRendererUtils-dO37Bpvd.js";import"./FeatureStore-Q3m4r6bU.js";import"./BoundsStore-RBJa9Y57.js";import"./heatmapTextureUtils-18RCQJUA.js";import"./projectExtentUtils-hrreMrrv.js";import"./query-gudo2lea.js";import"./pbfQueryUtils-ByQM_eeI.js";import"./pbf-NbW7fJzV.js";import"./EventedSet-nhIbQjEH.js";import"./FeatureLayerView-oOcWwXpE.js";import"./RefreshableLayerView-e_I6DK30.js";import"./SceneModification-DnNw4rdz.js";import"./persistable-cxKk0Jl-.js";import"./multiOriginJSONSupportUtils-R5XHSAtL.js";import"./resourceExtension-cFT63ZmX.js";import"./SceneLayerWorker-jKYJeDAX.js";const g=.2;let r=class extends c(u(h)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,e,a,s;return((s=(a=(e=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:e.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new n;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o()],r.prototype,"i3slayer",null),i([o(l)],r.prototype,"updatingProgress",void 0),i([o()],r.prototype,"updatingProgressValue",null),i([o()],r.prototype,"lodFactor",null),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const mt=r;export{mt as default};
